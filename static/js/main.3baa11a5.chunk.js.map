{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","x","y","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","setReverse","NONE","setType","className","onClick","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAkBzB,OAhBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAEJ,GAAUO,cAAcF,EAAEL,IAErC,KAAKJ,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SA7BJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAMe,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAA4BD,mBAAShB,EAASkB,MAA9C,mBAAOd,EAAP,KAAiBe,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPF,EAAQnB,EAASU,UAEnBY,KAAK,SACLF,UAAWhB,IAAaJ,EAASU,QAC5B,iBACA,0BAPP,iCAYA,wBACEW,QAAS,WACPF,EAAQnB,EAASY,SAEnBU,KAAK,SACLF,UAAWhB,IAAaJ,EAASY,OAC5B,oBACA,6BAPP,4BAYA,wBACES,QAAS,WACPJ,GAAYZ,IAEdiB,KAAK,SACLF,UAAWf,EACN,oBACA,6BAPP,sBAYEA,GAAcD,IAAaJ,EAASkB,OAElC,wBACEG,QAAS,WACPJ,GAAW,GACXE,EAAQnB,EAASkB,OAEnBI,KAAK,SACLF,UAAU,4BANZ,sBAaN,6BACGlB,EAAkBD,EAAiBG,EAAUC,GAAYkB,KAAI,SAAAC,GAAI,OAChE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC1GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3baa11a5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((x, y) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return x[sortType].localeCompare(y[sortType]);\n\n      case SortType.LENGTH:\n        return x.length - y.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setType(SortType.ALPABET);\n          }}\n          type=\"button\"\n          className={sortType === SortType.ALPABET\n            ? ('button is-info')\n            : ('button is-info is-light')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setType(SortType.LENGTH);\n          }}\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? ('button is-success')\n            : ('button is-success is-light')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverse(!isReversed);\n          }}\n          type=\"button\"\n          className={isReversed\n            ? ('button is-warning')\n            : ('button is-warning is-light')}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              onClick={() => {\n                setReverse(false);\n                setType(SortType.NONE);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, sortType, isReversed).map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}